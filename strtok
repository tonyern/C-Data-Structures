/*
This method parses a string of characters and returns it.
	char *str Is the passing value to parse.
	char *deli Is the delimiter that will determine what to parse.
*/
char* mystrtok(char *str, char *deli)
{
	// Array of characters that store the parsed information.
	static char *s;
	// Position index.
	static int pos;
	// Make j and start equal to position index.
	int j = pos;
	int start = pos;

	// If something is passed into str then make s equal str.
	if (str != NULL)
	{
		s = str;
	}

	// Looping through s array characters while it doesn't hit \0 which is null.
	while (s[pos] != '\0')
	{
		// Set j equal to 0 instead of pos.
		j = 0;
		// When the delimiter is not at null.
		while (deli[j] != '\0')
		{
			// If we hit a comma.
			if (s[pos] == deli[j])
			{
				// Set the end of parse to null. Ex: Tony,Nguyen -> Tony\0
				s[pos] = '\0';
				// Move up to the next character after comma.
				pos = pos + 1;
				// 
				if (s[start] != '\0')
				{
					return &s[start];
				}
				else
				{
					start = pos;
					pos--;
					break;
				}
			}
			j++;
		}
		pos++;
	}
	// Always be adding the null character after parse a string of characters.
	s[pos] = '\0';

	// If the next character is null then return null.
	if (s[start] == '\0')
	{
		return NULL;
	}
	// Else just return the address of the array of characters.
	else
	{
		return &s[start];
	}
}
